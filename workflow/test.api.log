
*** A good curl blog site : https://gist.github.com/subfuzion/08c5d85437d5d4f00e58


1. test /api/auth/signup POST api with JSON input


    Request:

    curl -H "Content-Type: application/json" --request POST --data '{"username":"test", "name":"test", "email":"test@gmail.com", "password":"****(masked)"}' http://localhost:8080/api/auth/signup

    Response:

    {"success":true,"message":"User registered successfully"}


    Check DB:

    select * from users;
    +----+---------------------+---------------------+----------------+------+--------------------------------------------------------------+-----------+
    | id | created_at          | updated_at          | email          | name | password                                                     | user_name |
    +----+---------------------+---------------------+----------------+------+--------------------------------------------------------------+-----------+
    |  1 | 2018-08-21 22:38:13 | 2018-08-21 22:38:13 | test@gmail.com | test | $2a$10$aprDO0HuUS9hXqAmWkfqp.w7m04m1eZd9KSBIRrLQ2a/mZL7zrv/W | test      |
    +----+---------------------+---------------------+----------------+------+--------------------------------------------------------------+-----------+
    1 row in set (0.07 sec)


2. test /api/auth/signin

    curl -X POST -H "Content-Type: application/json" --data '{"usernameOrEmail":"test", "password":"secret"}' http://localhost:8080/api/auth/signin

    got stackoverflow :  (<== it was a wrongly overridden method in SecurityConfig -- referred in the last commit)

    at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:199) ~[spring-security-core-5.1.0.M2.jar:5.1.0.M2]
    	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator.authenticate(WebSecurityConfigurerAdapter.java:502) ~[spring-security-config-5.1.0.M2.jar:5.1.0.M2]



        @PostMapping("/signin")
        public ResponseEntity<?> authenticateUser(@Valid @RequestBody LoginRequest loginRequest) {
            Authentication authentication = authenticationManager.authenticate(
                    new UsernamePasswordAuthenticationToken(
                            loginRequest.getUsernameOrEmail(),
                            loginRequest.getPassword()
                    )
            );



        From ProviderManager.java

        		if (result == null && parent != null) {
        			// Allow the parent to try.
        			try {
        				result = parent.authenticate(authentication);
        			}
        			catch (ProviderNotFoundException e) {
        				// ignore as we will throw below if no other exception occurred prior to
        				// calling parent and the parent
        				// may throw ProviderNotFound even though a provider in the child already
        				// handled the request
        			}
        			catch (AuthenticationException e) {
        				lastException = e;
        			}
        		}





3. singin api/endpoint test, after correcting the above issue (overrode a wrong method in SecurityConfig class)

    curl -X POST -H "Content-Type: application/json"  -d '{"usernameOrEmail": "test", "password": "****(masked)"}' http://localhost:8080/api/auth/signin

        --> Got the following result

        {"accessToken":"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxIiwiaWF0IjoxNTM1MTQ2ODg3LCJleHAiOjE1MzU3NTE2ODd9.c0PsSqf0-noz1Xw856cso_QrP2h0PHoZY_Ile3zzflcG-GZSlTBi8OoJRljFTVOzVKx4lFnT2pEO7hbkP_FnZQ","tokenType":"Bearer"}




4. /api/user

  4.1 checkUsernameAvailability

    curl -X GET 'http://localhost:8080/api/user/checkUsernameAvailability?username=test'

        {"available":false}


    curl -X GET 'http://localhost:8080/api/user/checkUsernameAvailability?username=test1'

        {"available":true}



  4.2 users

    curl -X GET 'http://localhost:8080/api/user/users'

        {"timestamp":"2018-08-25T11:32:51.696-0500","status":401,"error":"Unauthorized","message":"You're not authorized to access this resource.","path":"/api/user/users"}



5. /api/polls

  5.1  create poll

    curl -X POST -H "Content-Type: application/json" -d '{"question":"Do you like this site?", "choices":["Yes", "No"], "pollLength": {"days": 1, "hours": 2}}' http://localhost:8080/api/polls; echo

        {"timestamp":"2018-08-25T11:46:20.599-0500","status":401,"error":"Unauthorized","message":"You're not authorized to access this resource.","path":"/api/polls"}



    Still need to find the right way to put in the JWT in curl POST

     curl -X POST -H "Authorization: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxIiwiaWF0IjoxNTM1MjE1NjU4LCJleHAiOjE1MzU4MjA0NTh9.y07-Rzx1W2GhI1vfyWMH0eanBwD3kSlPKFIhharDXbUUl8e__8DP1oGOG_aOLk3RL5gRF0sS1ncpbc4ScriNTA" -H "Content-Type: application/json" -d '{"question":"Do you like this site?", "choices":["Yes", "No"], "pollLength": {"days": 1, "hours": 2}}' http://localhost:8080/api/polls; echo

        {"timestamp":"2018-08-25T11:54:04.573-0500","status":401,"error":"Unauthorized","message":"You're not authorized to access this resource.","path":"/api/polls"}



